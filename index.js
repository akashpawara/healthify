const ctx = document.getElementById('myChart');
const cadence = document.getElementById('cadence');
const steps = document.getElementById('steps');
generateLabels = (count) => {
  let labels= [];
  for(let i = 1 ; i < count ; i++){
    labels.push(i);
  }
  return labels;
}
let myLineChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: generateLabels(89),
      datasets: [{ 
          data: [0.7563838479770769, 0.7893371998611802, 0.7488709298949023, 0.7570116627470054, 0.8099352176360441, 0.7612972648250902, 0.7719873149879777, 0.7683950040675773, 0.7354433714429826, 0.713057881045757, 0.7948481920692897, 0.7182706675381371, 0.7217563720411881, 0.7452102227958174, 0.732579279219537, 0.7269102382099722, 0.7837885522714314, 0.7767725319878832, 0.7749139785784165, 0.8024415953207421, 0.7757490732090816, 0.743893573642302, 0.7626978073765391, 0.7147584996143553, 0.7450714983393841, 0.753251738690239, 0.7541229117997035, 0.7153338350084103, 0.7259114264030275, 0.7880124465052658, 0.7279038881470222, 0.8138843900643055, 0.7985594163687415, 0.7061778713340778, 0.7789611915332555, 0.7374062027765124, 0.7939373153726904, 0.72710756986788, 0.8074679357685578, 0.7364356230809295, 0.7325182996734297, 0.8142987293223168, 0.7463437586910904, 0.7286457452866014, 0.794404299408962, 0.8048419699050575, 0.7239470189977403, 0.7565908865863293, 0.8022878495772139, 0.8195082406491334, 0.8119890835595289, 0.7618288716058733, 0.7142959261813072, 0.7759672093523631, 0.7787260402481598, 0.7593985617125091, 0.7812113409938632, 0.8127592873380399, 0.7873612483833947, 0.799049102022379, 0.707971669680273, 0.7046634642586943, 0.7145486987757304, 0.7300627231129098, 0.7241711121386346, 0.7159195908201508, 0.7068773911094145, 0.7063052157765336, 0.7612353779025494, 0.7341180093956106, 0.8039117807258281, 0.7118669251376999, 0.732261234389758, 0.806565336599752, 0.7508525892707837, 0.811548050938694, 0.7075845401415717, 0.7525366855892758, 0.804156762710987, 0.8039398933669926, 0.7359024105035807, 0.7779319602609182, 0.7233214451597285, 0.7528042870719106, 0.815785832366568, 0.7362594802607952, 0.7492450567428389, 0.7509362022982643],
          label: "Step Length",
          borderColor: "#3e95cd",
          fill: false
        }, { 
          data: [1.6265590329811905, 1.4120539070896299, 1.4966122546071845, 1.6074004545254754, 1.4671331067427174, 1.611685778613917, 1.4584186091906106, 1.5651942330822206, 1.644296701246809, 1.4811141499486764, 1.563553348735805, 1.5046070528693218, 1.5603852471692288, 1.5900312093399116, 1.5720077152217506, 1.5221094941668083, 1.415484672098277, 1.631985512641711, 1.6083862066794758, 1.5715723793830034, 1.4186512046608348, 1.5959105384276306, 1.645869791170954, 1.583090357263199, 1.6039281501623222, 1.4652854438891334, 1.5406581324983497, 1.5843938772268578, 1.4137581687989336, 1.6149029803742796, 1.4562961928758453, 1.4633606077355603, 1.609495081864467, 1.5525369589664244, 1.5464500733923652, 1.6208756055434193, 1.5729106652884488, 1.407656767186556, 1.4249236580367295, 1.4610874847719268, 1.550279497455772, 1.504377916134156, 1.4804415075546042, 1.4293318966198016, 1.505448594664429, 1.6337080789745064, 1.5529148154494754, 1.5517475103616862, 1.4881076000695241, 1.630918163471797, 1.4502215721021496, 1.4095352220615556, 1.4459342765415546, 1.6316739003527876, 1.5912265820328773, 1.4351977349404104, 1.4966960826820088, 1.458621191164286, 1.576251119423297, 1.456342887425709, 1.5314707560247716, 1.4471380544632864, 1.4271593459650662, 1.5651655266344655, 1.518359730369441, 1.4237877579083063, 1.6341855683127497, 1.5816771557975202, 1.6001768342930776, 1.424996466678304, 1.4363820019074125, 1.4924297300189493, 1.603285881364826, 1.6164852250489992, 1.5186598885361966, 1.461009882239695, 1.4895897579452033, 1.6413144322849944, 1.624403865417014, 1.5680352554913788, 1.445740148767603, 1.5096295395272112, 1.4241082567329282, 1.5847370417174786, 1.5508364091544369, 1.5185068668960187, 1.4749044887717222, 1.4314007169357397],
          label: "Stride Length",
          borderColor: "#8e5ea2",
          fill: false
        }
      ]
    },
    options: {
      responsive: true,
      title: {
        display: true,
        text: 'Step/Stride data in meters'
      }
    }
});
fetchdata = async () =>{
    fetch('https://fitapiv1.herokuapp.com/api/mockfitdata')
      .then(
        function(response) {
          if (response.status !== 200) {
            console.log('Looks like there was a problem. Status Code: ' +
              response.status);
            return;
          }
          response.json().then(function(data) {
            cadence.innerHTML = data.cadence + ' steps/min';
            steps.innerHTML = Math.round(data.numOfSteps);
            myLineChart.data.labels = generateLabels(data.groundContact + 1);
            myLineChart.data.datasets[0].data = data.stepLength;
            myLineChart.data.datasets[1].data = data.strideLength;
            myLineChart.update();
          });
        }
      )
      .catch(function(err) {
        console.log('Fetch Error :-S', err);
      });
}